#!/usr/bin/perl
# tag2fname.dialog
#  MP3 utils for linux - v0.41
#  V.Korol 2011
############################## 

use Switch;
use Cwd;

use TagTools qw(:DEFAULT $COOKIE_FILE $VERSION);

use UI::Dialog::Backend::CDialog;


######################################################################################
sub displayHelp {
    print "tag2fname.dialog v$VERSION by V.Korol (vakorol@mail.ru) -\n";
    print " A dialog gui for tag2fname. Queries for a format string and invokes tag2fname\n";
    print " to rename the file in the specified format.\n";
    print " The following variables in the format string are allowed:\n";
    print "  %a - artist, %t - title, %b - album, %n - track no.,\n";
    print "  %y - year, %c - comment, %u - useless.\n";
    print "Usage:  tag2fname.dialog file1.mp3 file2.ogg ...\n";
    exit;
}


######################################################################################

$file = $ARGV[0];
 displayHelp() if(!defined($file) || ($file eq ""));


## Check for cookie file:
$tag2fname_last_format = "";
$tag2fname_last_charset = "";
(-r $COOKIE_FILE) ? require "$COOKIE_FILE" : print "$COOKIE_FILE cannot be read, does it exist?";


$backtitle=getcwd();
$short_filename = $file;
$short_filename =~ s/^.+?\/([^\/]+)$/$1/;  #extract only the filename from the full path


###################     INIT THE DIALOG        ###########################################
  my $d = new UI::Dialog::Backend::CDialog ( backtitle => "$backtitle",
                                             title => "Rename file(s): tag -> filename" );

  my @data = $d->form( text => "$short_filename\n\%a = artist, \%t = title, \%n = track\n\%b = album,  \%g = genre, \%y = year",
		       literal => 1,
		       height => 11,
		       width => 50,
		       formheight => 2,
                       list => [ [ 'Format:',  1, 1 ], [ "$tag2fname_last_format",  1, 10, 35, 0 ],
                                 [ 'Charset:', 2, 1 ], [ "$tag2fname_last_charset", 2, 10, 25, 0 ] ]
                    );

 exit if (!defined(@data) or (scalar @data == 1));

 ($format, $charset) = @data;

$charset_arg = (defined($charset) && ($charset ne "")) ? "-c \"$charset\" " : "";

## Run the command:
$command = "tag2fname -f \"$format\" " . $charset_arg;
foreach $file(@ARGV){
 print `$command \"$file\"`;
}


# Finally, update the settings in the cookie file:
TagTools::updateCookieFile("tag2fname_last_format=$format", "tag2fname_last_charset=$charset");
