#!/usr/bin/perl
# tag2fname.dialog
#  TagTools for linux v0.42b
#  V.Korol 2011
############################## 

use Switch;

use TagTools qw(:DEFAULT $COOKIE_FILE $VERSION $DEBUG_ON $DEBUG_FILE);

use UI::Dialog::Backend::CDialog;
use Audio::TagLib;


######################################################################################
sub displayHelp {
    print "tag2fname.dialog v$VERSION by V.Korol (vakorol@mail.ru) -\n";
    print " A dialog gui for tag2fname. Queries for a format string and invokes tag2fname\n";
    print " to rename the file in the specified format.\n";
    print " The following variables in the format string are allowed:\n";
    print "  %a - artist, %t - title, %b - album, %n - track no.,\n";
    print "  %y - year, %c - comment, %u - useless.\n";
    print "Usage:  tag2fname.dialog [-d] file1.mp3 file2.ogg ...\n";
    print "     -d         : output debug messages to $DEBUG_FILE.\n";
    exit;
}


######################################################################################

$file = $ARGV[0];
if ($file eq "-d"){	# -d option: turn on debug logging
  $DEBUG_ON=1;
  use warnings;
  TagTools::printLog("Run $0") if($DEBUG_ON);
  open STDERR,'>>',$DEBUG_FILE;
  $SIG{__WARN__} = sub {warn print (localtime()." -- ".@_)};
#  $SIG{__DIE__}  = sub {die  print (localtime()." -- ".@_)};
  $file = $ARGV[1];
}
if ($file=~m/^\-/) {	# ignore unknown option, but log event if necessary
  TagTools::printLog("$0: Ignoring unknown option '$file.'") if($DEBUG_ON);
  next;
}

## supress warnings and stderr output if debug logging is disabled:
open STDERR,'>','/dev/null' if (!$DEBUG_ON);

 displayHelp() if(!defined($file) || ($file eq ""));


## Check for cookie file:
$tag2fname_last_format = "";
$tag2fname_last_charset = "";
(-r $COOKIE_FILE) ? require "$COOKIE_FILE" : print "$COOKIE_FILE cannot be read, does it exist?";


$f = Audio::TagLib::FileRef->new($file);

## read tech info, current dir and short filename
$info_ref = TagTools::getFileInfo($f);
($audio_length, $audio_bitrate, $audio_sample, $backtitle, $short_filename) = @$info_ref;


###################     INIT THE DIALOG        ###########################################
  my $d = new UI::Dialog::Backend::CDialog ( backtitle => "$backtitle",
                                             title => "Rename file(s): tag -> filename" );

  my @data = $d->form( text => "$short_filename\n Length: $audio_length\n Bitrate: $audio_bitrate kb/sec,  $audio_sample Hz\n\%a = artist, \%t = title, \%n = track\n\%b = album,  \%g = genre, \%y = year",
		       literal => 1,
		       height => 13,
		       width => 50,
		       formheight => 2,
                       list => [ [ 'Format:',  1, 1 ], [ "$tag2fname_last_format",  1, 10, 35, 0 ],
                                 [ 'Charset:', 2, 1 ], [ "$tag2fname_last_charset", 2, 10, 25, 0 ] ]
                    );

 exit if (!defined(@data) or (scalar @data == 1));

 ($format, $charset) = @data;

$charset_arg = (defined($charset) && ($charset ne "")) ? "-c \"$charset\" " : "";

## Run the command:
$command = "tag2fname -f \"$format\" " . $charset_arg;
foreach $file(@ARGV){
 print `$command \"$file\"`;
}


# Finally, update the settings in the cookie file:
TagTools::updateCookieFile("tag2fname_last_format=$format", "tag2fname_last_charset=$charset");
