#!/usr/bin/perl
# tagedit
#  TagTools for linux v0.43
#  V.Korol 2012
############################## 

use Encode;

use TagTools qw(:DEFAULT $VERSION $DEFAULT_CHARSET $DEBUG_ON $DEBUG_FILE);

use UI::Dialog::Backend::CDialog;
use Audio::TagLib;
use utf8;

######################################################################################
sub displayHelp {
 print "tagedit.dialog v$VERSION by V.Korol (vakorol\@mail.ru).";
 print "\n A script for dialog-based audio tag editing.\n";
 print " Usage:  [-c CHARSET] [-d] tagedit <AUDIO_FILE>\n";
 print "     -c CHARSET : Read tags in specified charset. CHARSET should be one of\n";
 print "		charmaps known by your system (see locale -m for the full list).\n";
 print "		If omitted, the charset is $DEFAULT_CHARSET.\n";
 print "	       Example:  tag2edit -c CP1251 somefile.mp3\n";
 print "     -d         : output debug messages to $DEBUG_FILE.\n";
}


######################################################################################
############################### MAIN: ################################################

my $charset="";
my $charset_next=0;
$num_of_files=0;

foreach my $arg (@ARGV){

    if ($arg eq "-d"){	# -d option: turn on debug logging
      $DEBUG_ON=1;
      use warnings;
      TagTools::printLog("Run $0") if($DEBUG_ON);
      open STDERR,'>>',$DEBUG_FILE;
      $SIG{__WARN__} = sub {warn print (localtime()." -- ".@_)};
#      $SIG{__DIE__}  = sub {die  print (localtime()." -- ".@_)};
      next;
    }
    if ($arg eq "-c"){	# -c CHARSET option: use specified charset
      $charset_next=1;
      next;
     }
     if ($charset_next){	#    get the charset specified after the -c option
      $charset = TagTools::initCharset($arg);
      $charset_next=0;
      next;
     }
     if ($arg=~m/^\-/) {	# ignore unknown option, but log event if necessary
      TagTools::printLog("$0: Ignoring unknown option '$arg'.") if($DEBUG_ON);
      next;
     }

    ## supress warnings and stderr output if debug logging is disabled:
    open STDERR,'>','/dev/null' if (!$DEBUG_ON);

    # any command-line argument rather than "-x" will be considered an audio file name:
    $file=$arg;

    $num_of_files++;

    $file=~m/(\.[\w\d]+)$/;  # save the file extension
    my $extension=$1;

    if(!(-e $file)){
        print "File not found!\n";
        next;
    }

    $ro_title = (-w $file) ? "" : " (READ ONLY!)";
    

    $f = Audio::TagLib::FileRef->new($file);

    if( (!defined($f->file()) || !$f->file()->isValid()) ){
	TagTools::printLog("$file -- unsupported format, skipping\n");
	print("$file -- unsupported format, skipping\n");
	next;
    }


    ## read tags:
    $tag_ref = TagTools::readTag($f, $charset);
    ($title, $artist, $album, $year, $track, $genre, $comment) = @$tag_ref;

    ## UI::Dialog::Backend::CDialog::form() cannot print the dollar char correctly,
    ## do for now we'll just replace it with a ?
     foreach $field (($title, $artist, $album, $format, $year, $track, $genre, $comment)) {
        $field =~ s/\$/\?/g;
#        $field =~ s/\x24/\\\x24/g;
     }

    ## read tech info, current dir and short filename
    $info_ref = TagTools::getFileInfo($f);
    ($audio_length, $audio_bitrate, $audio_sample, $backtitle, $short_filename) = @$info_ref;


    ###################     INIT THE DIALOG        ###########################################
      my $d = new UI::Dialog::Backend::CDialog ( backtitle => "$backtitle",
                                                 title => "Edit tags$ro_title" );

      @data = $d->form( text => "$short_filename\n Length: $audio_length\n Bitrate: $audio_bitrate kb/sec,  $audio_sample Hz",
		       literal => 1,
		       height => 17,
		       width => 55,
		       formheight => 7,
                       list => [ [ 'Title:',   1, 1 ], [ "$title",   1, 10, 39, 160 ],
                                 [ 'Artist:',  2, 1 ], [ "$artist",  2, 10, 39, 100 ],
                                 [ 'Album:',   3, 1 ], [ "$album",   3, 10, 39, 100 ],
                                 [ 'Year:',    4, 1 ], [ "$year",    4, 10, 39, 20 ],
                                 [ 'Track:',   5, 1 ], [ "$track ",  5, 10, 39, 20 ],
                                 [ 'Genre:',   6, 1 ], [ "$genre",   6, 10, 39, 80 ],
                                 [ 'Comment:', 7, 1 ], [ "$comment", 7, 10, 39, 160 ] ]
                      );

     next if (!defined(@data) || (scalar @data == 1));

    # correct the spaces bug from CDialog - remove traling spaces:
    @data = @{TagTools::removeTrailingSpaces(\@data)};

    ##  Encode the data back to $charset:
    if ($charset ne $DEFAULT_CHARSET) {
        foreach $item(@data){
		Encode::from_to($item, "$DEFAULT_CHARSET", "$charset");
        }
    }

    ($title, $artist, $album, $year, $track, $genre, $comment) = @data;

     ## Run it!
    $f->tag()->setTitle  ( Audio::TagLib::String->new($title)   );
    $f->tag()->setArtist ( Audio::TagLib::String->new($artist)  );
    $f->tag()->setAlbum  ( Audio::TagLib::String->new($album)   );
    $f->tag()->setGenre  ( Audio::TagLib::String->new($genre)   );
    $f->tag()->setComment( Audio::TagLib::String->new($comment) );
    $f->tag()->setYear   ( $year  );
    $f->tag()->setTrack  ( $track );

    $f->save();

}


displayHelp() if ($num_of_files==0);
